(()=>{"use strict";function e(e,t){return e.sort(((e,s)=>{const n=t.toLowerCase(),a=e.name.toLowerCase(),r=s.name.toLowerCase(),i=a.indexOf(n),c=r.indexOf(n);return i!==c?i-c:e.name.length-(i+t.length)-(s.name.length-(c+t.length))}))}class t{constructor(e){this._searchIndex=e}For(t){const s={truncated:!1,results:[]};if(void 0===this._searchIndex)throw new Error("Search index has not been initialized.");const n=this._searchIndex.namespaces;for(const e in n)for(const a of n[e]){if(s.results.length>=50){s.truncated=!0;break}const n=this._searchIndex.namespace_map[Number.parseInt(e)].replace("Windows.","").replace(/\./g,"::"),r=n+"::"+a.name;let i=!1;try{i=new RegExp(t,"i").test(r)}catch(e){i=r.includes(t)}if(i){let e=a.features.map((e=>this._searchIndex.feature_map[e]));e=e.filter((e=>"Foundation"!==e&&"Win32_Foundation"!==e)),s.results.push({name:a.name,namespace:n,features:e})}}return s.results=e(s.results,t),s}}class s{constructor(e){this._searchIndex={version:e.version,namespaces:e.namespaces,items:Object.fromEntries(Object.entries(e.items).map((([e,t])=>[e,t.map((e=>({name:e.n.replace(/\./g,"::"),features:e.f})))])))}}For(t){const s={truncated:!1,results:[]};if(void 0===this._searchIndex)throw new Error("Search index has not been initialized.");for(const[e,n]of Object.entries(this._searchIndex.items))for(const a of n){if(s.results.length>=50){s.truncated=!0;break}const n=this._searchIndex.namespaces[Number.parseInt(e)].replace("Windows.","").replace(/\./g,"::"),r=n+"::"+a.name;let i=!1;try{i=new RegExp(t,"i").test(r)}catch(e){i=r.includes(t)}if(i){let e=a.features.map((e=>this._searchIndex.namespaces[e].replace("Windows.","").replace(/\./g,"_")));e=e.filter((e=>"Foundation"!==e&&"Win32_Foundation"!==e)),s.results.push({name:a.name,namespace:n,features:e})}}return s.results=e(s.results,t),s}}class n{static Create(e){return n=this,a=void 0,i=function*(){const n="local"==e?"/static/features.json":`https://raw.githubusercontent.com/microsoft/windows-rs/${e}/crates/libs/windows/features.json`,a=yield fetch(n);if(!a.ok)throw new Error("Failed to fetch search index");const r=yield a.json();return"version"in r&&2===r.version?new s(r):new t(r)},new((r=void 0)||(r=Promise))((function(e,t){function s(e){try{o(i.next(e))}catch(e){t(e)}}function c(e){try{o(i.throw(e))}catch(e){t(e)}}function o(t){var n;t.done?e(t.value):(n=t.value,n instanceof r?n:new r((function(e){e(n)}))).then(s,c)}o((i=i.apply(n,a||[])).next())}));var n,a,r,i}}let a;self.onmessage=e=>{switch(e.data.name){case"initialize":{const t=e.data;n.Create(t.branch).then((e=>{a=e,postMessage({name:"initializeResult",result:!0})}));break}default:if(a){const t=e.data,s=a.For(t.query);postMessage({name:"searchResult",results:s.results,truncated:s.truncated})}}}})();
//# sourceMappingURL=825.4de207f3dee2c777d02b.js.map